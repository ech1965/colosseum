# This is the main configuration file for the application.
# ~~~~~
# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Hibernate configuration
# ~~~~
jpa.default = defaultPersistenceUnit
db.default.jndiName = DefaultDS
db.default.maxConnectionsPerPartition = 10
db.default.minConnectionsPerPartition = 10

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.
#
# Root logger:
logger.root = ERROR
#
# Logger used by the framework:
logger.play = ERROR
#
# Logger provided to your application:
logger.application = DEBUG

# Colosseum node group
# All virtual machines user by colosseum will be prefixed with
# this String, allowing colosseum to identify machines managed
# by it.
# Please note: changing this during runtime, will cause
# serious problems :)
colosseum.nodegroup = "colosseum"

# ExecutionService Thread
# defaults to 10
colosseum.execution.thread = 10

#Converters
colosseum.conversion.package = "dtos.conversion"
colosseum.conversion.converters = "dtos.conversion.converters"

#Remote Connection

#Installers
colosseum.installer.download.threads = 1
#Java
colosseum.installer.linux.java.download = "http://javadl.sun.com/webapps/download/AutoDL?BundleId=106240"
colosseum.installer.windows.java.download = "http://javadl.sun.com/webapps/download/AutoDL?BundleId=107100"
#7Zip
colosseum.installer.windows.7zip.download = "http://7-zip.org/a/7za920.zip"
#KairosDB
colosseum.installer.abstract.kairosdb.download = "https://github.com/kairosdb/kairosdb/releases/download/v0.9.4/kairosdb-0.9.4-6.tar.gz"
#Visor
colosseum.installer.abstract.visor.download = "https://omi-dev.e-technik.uni-ulm.de/jenkins/job/cloudiator-visor/lastSuccessfulBuild/artifact/visor-service/target/visor.jar"
colosseum.installer.abstract.visor.config.executionThreads = "20"
colosseum.installer.abstract.visor.config.reportingInterval = "10"
colosseum.installer.abstract.visor.config.telnetPort = "9001"
colosseum.installer.abstract.visor.config.restHost = "http://0.0.0.0"
colosseum.installer.abstract.visor.config.restPort = "9002"
colosseum.installer.abstract.visor.config.kairosServer = "localhost"
colosseum.installer.abstract.visor.config.kairosPort = "8080"
colosseum.installer.abstract.visor.config.reportingModule = "de.uniulm.omi.cloudiator.visor.reporting.kairos.KairosReportingModule"
#LifecycleAgent
colosseum.installer.abstract.lance.download = "https://omi-dev.e-technik.uni-ulm.de/jenkins/job/cloudiator-lance/lastSuccessfulBuild/artifact/lance-server/target/lance-server-1.2.0-SNAPSHOT-jar-with-dependencies.jar"
colosseum.installer.linux.lance.docker.download = "https://get.docker.com/ubuntu/"

#Scalability
colosseum.scalability.tsdb.host.default = "127.0.0.1"
colosseum.scalability.visor.port = 9002
colosseum.scalability.visor.telnet.port = 9001
colosseum.scalability.aggregator.rmi.host = "127.0.0.1"
colosseum.scalability.aggregator.rmi.key = "Aggregator"
colosseum.scalability.aggregator.rmi.port = 33033
colosseum.scalability.aggregator.agent.local.protocol = "http"
colosseum.scalability.aggregator.agent.local.ip = "localhost"
colosseum.scalability.aggregator.agent.local.port = 9000
colosseum.scalability.aggregator.agent.local.username = "john.doe@example.com"
colosseum.scalability.aggregator.agent.local.tenant = "admin"
colosseum.scalability.aggregator.agent.local.password = "admin"